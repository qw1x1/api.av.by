class="listing__header" -  количество найденых объявлений
class="listing__items" - внутри все объявления
class="listing-item" - конкретная тачка, внутри вся инфа
class="listing-item__wrap" - конкретная тачка, внутри вся инфа 
class="listing-item__about" - внутри название тачки
class="listing-item__params" - внутри характеристики тачки
class="listing-item__prices" - внутри цена тачки
class="listing-item__message" - внутри описание от продавца
class="listing-item__info" - внутри локация и дата публикации

Если количество найденых объявлений привышает 25, то количество делим на 25, если есть остаток то округляем в большую сторону и во время второго запроса добавляем параметр page='<начиная с 2>'
Поочередно парсим все данные со страниц и записываем в json
После сбора инфы скармливаем файл алгоритму анализа

price_usd[min]=3000&price_usd[max]=4000 - параметы для добавления диапозона цены

Бот должен работать с бд (таб User)
Users:
    pk = int(id_user)
    percent_difference_in_price = int(value)
    search_car_list = list[картеж выбраных авто для поиска, в виде картежа со вложенными dict{brand_id:'value', model_id:'value', year_min:'value', year_max:'value'}], если пользоватаель не указал параметр записываем 0
    price_range = list[int(min_value), int(max_value)] - Диапозон цен для поиска

